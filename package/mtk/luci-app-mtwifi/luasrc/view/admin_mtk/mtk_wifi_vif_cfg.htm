
<%+header%>
<!--
	This module is a demo to configure MTK' proprietary WiFi driver.
	Basic idea is to bypass uci and edit wireless profile (mt76xx.dat) directly.
	LuCI's WiFi configuration is more logical and elegent, but it's quite tricky to
	translate uci into MTK's WiFi profile (like we did in "uci2dat").

	Hua Shao <nossiac@163.com>
	- - - - - - - - - - - - - - - - -

	For MT7622+MT7915
-->

<%
local disp = require "luci.dispatcher"
local path  = disp.context.path
local request = disp.context.request
local mtkwifi = require("mtkwifi")
local devname
local vifname, vifidx
local dev = {}
local vif = {}

if request[4] == "vif_add_view" then
  devname, vifname = request[5], request[6]
  local devs = mtkwifi.get_all_devs()
  dev = devs and devs[devname]
  vifname = vifname..#dev.vifs
  vifidx = #dev.vifs + 1

elseif request[4] == "vif_cfg_view" then
  devname, vifname = request[5], request[6]
  local devs = mtkwifi.get_all_devs()
  dev = devs and devs[devname] or nil
  vif = dev and dev.vifs[vifname] or nil
  vifidx = vif and vif.vifidx or nil
end

local cfgs = mtkwifi.load_profile(dev.profile)
local WscValue = mtkwifi.token_get(cfgs["WscConfMode"], vifidx, "0") or "0"

if not mtkwifi.exists("/etc/wireless/mt7622/") then
	mt1 = ""
elseif mtkwifi.exists("/etc/wireless/mt7603/") and mtkwifi.exists("/etc/wireless/mt7612/") then
	mt1 = "mt7612"
else
	mt1 = "mt7603"
end
%>

<style type="text/css">
<% if mt1 ~= "" then %>
#container {visibility: hidden;}
<% end %>
table {
  border-collapse:separate;
  border-spacing:9px 5px
}
.he1 {
 margin-left:8px;
 white-space:pre;
}
@media screen and (max-device-width: 600px) {
 header .pull-right {
  flex:none;
  display:flex;
  flex-direction:column;
  justify-content:space-around;
  margin:.2em 5px .2em auto;
  padding:0
 }
 input,
 textarea,
 select,
 .cbi-dropdown > ul > li {
  font-size:1em!important;
  height:30px;
 }
}
</style>

<div id="container">
	<div id="loading" style="margin-top: 1em; display: none;">
	<img src="<%=resource%>/icons/loading.gif" alt="<%:Loading%>" />
		&nbsp;&nbsp;&nbsp; <%:Please waiting......%>
	</div>

	<form method="post" name="cbi" action="<%=luci.dispatcher.build_url("admin", "network", "wifi", "vif_cfg", devname, vifname)%>" enctype="multipart/form-data" autocomplete="off">
	<% if not dev or not vif then%>
		<fieldset class="cbi-section">
			<legend>Interface Not Exist - <%=vifname and devname.."@"..vifname or devname%>
			</legend>
		</fieldset>
	<% else %>
		<fieldset class="cbi-section">
		<legend><span class="ren"><%:Interface Configurations%> - <%=vifname and devname.."@"..vifname or devname%></span>
	<%
	local diff = mtkwifi.diff_profile(dev.profile)
	if next(diff) ~= nil then
	%>
	<span id="reload" style="color:red; display:none;">(<a href="#" onclick='wifi_reload("<%=luci.dispatcher.build_url("admin", "network", "wifi", "reload", devname)%>");return false;'><%:reload%></a> <%:to apply changes%>)</span>
	<%
	end
	%>
		</legend>
		<table id="vif-cfg-basic">
			<tbody>
			<tr>
				<td>SSID</td>
				<td>
				<input value="<%=vif.__ssid%>" name="<%="SSID"..vifidx%>" required="required" />
				<input value="<%=request[4]%>" name="__action" type="hidden" />
				</td>
			</tr>
			<% if dev.DBDC_MODE == "0" then %>
			<tr>
				<td>Channel</td>
				<td>
				<select style="width:auto" name="__channel">
					<% for i=0,14 do %>
					<option value="<%=i%>" <% if i==vif.__channel then %> selected="selected"<% end %>>
					<% if i==0 then %>Auto<% else %><%=i%><% end %>
					</option>
					<% end %>
				</select>
				</td>
			</tr>
			<% end %>
			<tr>
				<td>Auth Mode</td>
				<td>
				<select name="__authmode" id="AuthMode" onchange="AuthMode_onchange(this.options[this.options.selectedIndex].value)">
					<%
					local AuthModes
					if(WscValue == "0") then
						if mt1 == "mt7612" then
							if devname == "mt7615.2" then
								AuthModes = dev.AuthModeList12
							else
								AuthModes = dev.AuthModeList
							end
						else
							AuthModes = dev.AuthModeList
						end
					else
						AuthModes = dev.WpsEnableAuthModeList
					end
					for _, v in ipairs(AuthModes) do
						if (mtkwifi.token_get(cfgs.IEEE8021X, vifidx, nil) == "1") then
						if(v == "IEEE8021X") then %>
							<option value="<%=v%>" selected="selected" ><%=v%>
							</option>
						<% else %>
							<option value="<%=v%>" ><%=v%>
							</option>
						<% end
						elseif (vif.__authmode == "OPEN" and vif.__encrypttype== "NONE") then
						if(v == "Disable") then %>
							<option value="<%=v%>" selected="selected" ><%=v%>
							</option>
						<% else %>
							<option value="<%=v%>" ><%=v%>
							</option>
						<% end
						else%>
						<option value="<%=v%>" <% if vif.__authmode==v then %>selected="selected" <% end %>><%=v%>
						</option>
						<% end %>
					<% end %>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="wpacommon" style="display:none;">
			<tr>
				<td>WPA Algorithm</td>
				<td>
				<select name="__wpa_encrypttype" id="__wpa_encrypttype">
				<% for _,v in ipairs(dev.WPA_Enc_List) do %>
					<option value="<%=v%>" <% if vif.__encrypttype==v then %>selected="selected" <% end %>><%=v%></option>
				<% end %>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="wpacommon3" style="display:none;">
			<tr>
				<td>WPA Algorithm</td>
				<td>
				<select name="wpacommon3" disabled="disabled">
					<option selected="selected">AES</option>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="key_r" style="display:none;">
			<tr>
				<td>Key Renewal Interval</td>
				<td>
				<input value="<%=vif.__rekeyinterval%>" type="text" name="__rekeyinterval" /><span class="he1">second(s) (0 ~ 4194303, default 86400)</span>
				</td>
			</tr>
			</tbody>
			<tbody id="WPA2PSK" style="display:none;">
			<tr>
				<td>Key</td>
				<td>
				<input value="<%=vif.__wpapsk%>" type="text" name="<%="WPAPSK"..vifidx%>" id="<%="WPAPSK"..vifidx%>" /><span class="he1">8~63 symbols</span>
				</td>
			</tr>
			</tbody>
			<tbody id="WEP" style="display:none;">
			<tr>
				<td>Encryption</td>
				<td>
				<select name="__wep_encrypttype">
				<% for _,v in ipairs(dev.WEP_Enc_List) do %>
					<option value="<%=v%>" <% if vif.__encrypttype==v then %>selected="selected" <% end %>><%=v%>
					</option>
				<% end %>
				</select>
				</td>
			</tr>
			<tr>
				<td>Default Key</td>
				<td>
				<select name="__DefaultKeyID" id="__DefaultKeyID">
					<option value="1" <%if tonumber(vif.__wepkey_id) == 1 then%>selected="selected"<%end%>>1</option>
					<option value="2" <%if tonumber(vif.__wepkey_id) == 2 then%>selected="selected"<%end%>>2</option>
					<option value="3" <%if tonumber(vif.__wepkey_id) == 3 then%>selected="selected"<%end%>>3</option>
					<option value="4" <%if tonumber(vif.__wepkey_id) == 4 then%>selected="selected"<%end%>>4</option>
				</select>
				</td>
			</tr>
			<tr>
				<td>WEP Key 1</td>
				<td>
				<input value="<%=cfgs["Key1Str"..vifidx]%>" type="text" name="<%="Key1Str"..vifidx%>" id="<%="Key1Str"..vifidx%>" />
				</td>
			</tr>
			<tr>
				<td>Key Type 1</td>
				<td>
				<select id="<%="WEP1Type"..vifidx%>" name="<%="WEP1Type"..vifidx%>">
				<option value="1" <%if(mtkwifi.token_get(cfgs["Key1Type"], vifidx, 0)) == "1" then %> selected="selected"<%end%>>ASCII</option>
				<option value="0" <%if(mtkwifi.token_get(cfgs["Key1Type"], vifidx, 0)) == "0" then %> selected="selected"<%end%>>Hex</option>
				</select>
				</td>
			</tr>
			<tr>
				<td>WEP Key 2</td>
				<td>
				<input value="<%=cfgs["Key2Str"..vifidx]%>" type="text" name="<%="Key2Str"..vifidx%>" id="<%="Key2Str"..vifidx%>" />
				</td>
			</tr>
			<tr>
				<td>Key Type 2</td>
				<td>
				<select id="<%="WEP2Type"..vifidx%>" name="<%="WEP2Type"..vifidx%>">
				<option value="1" <%if(mtkwifi.token_get(cfgs["Key2Type"], vifidx, 0)) == "1" then %> selected="selected"<%end%>>ASCII</option>
				<option value="0" <%if(mtkwifi.token_get(cfgs["Key2Type"], vifidx, 0)) == "0" then %> selected="selected"<%end%>>Hex</option>
				</select>
				</td>
			</tr>
			<tr>
				<td>WEP Key 3</td>
				<td>
				<input value="<%=cfgs["Key3Str"..vifidx]%>" type="text" name="<%="Key3Str"..vifidx%>" id="<%="Key3Str"..vifidx%>" />
				</td>
			</tr>
			<tr>
				<td>Key Type 3</td>
				<td>
				<select id="<%="WEP3Type"..vifidx%>" name="<%="WEP3Type"..vifidx%>">
				<option value="1" <%if(mtkwifi.token_get(cfgs["Key3Type"], vifidx, 0)) == "1" then %> selected="selected"<%end%>>ASCII</option>
				<option value="0" <%if(mtkwifi.token_get(cfgs["Key3Type"], vifidx, 0)) == "0" then %> selected="selected"<%end%>>Hex</option>
				</select>
				</td>
			</tr>
			<tr>
				<td>WEP Key 4</td>
				<td>
				<input value="<%=cfgs["Key4Str"..vifidx]%>" type="text" name="<%="Key4Str"..vifidx%>" id="<%="Key4Str"..vifidx%>" />
				</td>
			</tr>
			<tr>
				<td>Key Type 4</td>
				<td>
				<select id="<%="WEP4Type"..vifidx%>" name="<%="WEP4Type"..vifidx%>">
				<option value="1" <%if(mtkwifi.token_get(cfgs["Key4Type"], vifidx, 0)) == "1" then %> selected="selected"<%end%>>ASCII</option>
				<option value="0" <%if(mtkwifi.token_get(cfgs["Key4Type"], vifidx, 0)) == "0" then %> selected="selected"<%end%>>Hex</option>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="WPA2" style="display:none;">
			<tr>
				<td>PMK Cache Period</td>
				<td>
				<input value="<%=vif.__pmkcacheperiod%>" type="text" name="__pmkcacheperiod" /><span class="he1">minute(s)</span>
				</td>
			</tr>
			<tr>
				<td>Pre-Authentication</td>
				<td>
				<input name="__preauth" id="__preauth" value="1"
				<% if mtkwifi.token_get(cfgs["PreAuth"], vifidx, 0) == "1" then %>
				checked="checked"
				<% end %> type="checkbox" />
				</td>
			</tr>
			</tbody>
			<tbody id="MFP" style="display:none;">
			<tr>
				<td>802.11w MFP</td>
				<td>
				<select style="width:auto" name="__mfp" id="__mfp">
					<option value="0" <% if vif.__mfpc == "0" and vif.__mfpr == "0" then %>selected="selected"<% end%>>Disabled</option>
					<option value="1" <% if vif.__mfpc == "1" and vif.__mfpr == "1" then %>selected="selected"<% end%>>Required</option>
					<option value="2" <% if vif.__mfpc == "1" and vif.__mfpr == "0" then %>selected="selected"<% end%>>Optional</option>
				</select>
				</td>
			</tr>
	<!--
			<tr>
				<td>MFPSHA256 </td>
				<td> <input name="__pmfsha256" id="__pmfsha256" value="1"
				<% if mtkwifi.token_get(cfgs["PMFSHA256"], vifidx, 0) == "1" then %>
				checked="checked"
				<% end %> type="checkbox" /> </td>
			</tr>
	-->
			</tbody>
			<tbody id="MFP2" style="display:none;">
			<tr>
				<td>802.11w MFP</td>
				<td>
				<select style="width:auto" name="MFP2" disabled="disabled">
					<option selected="selected">Optional</option>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="MFP3" style="display:none;">
			<tr>
				<td>802.11w MFP</td>
				<td>
				<select style="width:auto" name="MFP3" disabled="disabled">
					<option selected="selected">Required</option>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="MFP4" style="display:none;">
			<tr>
				<td>802.11w MFP</td>
				<td>
				<select style="width:auto" name="MFP4" disabled="disabled">
					<option selected="selected">Disabled</option>
				</select>
				</td>
			</tr>
			</tbody>
			<tbody id="IEEE8021X" style="display:none;">
			<tr>
				<td>WEP for 8021X</td>
				<td>
				<input value="1" type="checkbox" name="__8021x_wep" <% if vif.__encrypttype=="WEP" then %>checked="checked" <% end %> />
				</td>
			</tr>
			</tbody>
			<tbody id="radius" style="display:none">
			<tr>
				<td>Radius Server IP</td>
				<td>
				<input value="<%=vif.__radius_server%>" type="text" name="__radius_server" />
				</td>
			</tr>
			<tr>
				<td>Radius Server Port</td>
				<td>
				<input value="<%=vif.__radius_port%>" type="text" name="__radius_port" />
				</td>
			</tr>
			<tr>
				<td>Shared Secret</td>
				<td>
				<input value="<%=cfgs["RADIUS_Key"..vifidx]%>" type="text" name="<%="RADIUS_Key"..vifidx%>" id="<%="RADIUS_Key"..vifidx%>" />
				</td>
			</tr>
			<tr>
				<td>Session Timeout</td>
				<td>
				<input value="<%=mtkwifi.token_get(cfgs.session_timeout_interval, vifidx, 0)%>" type="text" name="__session_timeout_interval" id="__session_timeout_interval" /><span class="he1">second(s)</span>
				</td>
			</tr>
			<tr>
				<td>Idle Timeout</td>
				<td>
				<input value="<%=cfgs.idle_timeout_interval%>" type="text" name="idle_timeout_interval" id="idle_timeout_interval" /><span class="he1">second(s)</span>
				</td>
			</tr>
			</tbody>
			<tbody>
			<tr>
				<td>Hidden SSID</td>
				<td>
				<input name="__hidessid" value="1"
				<% if vif.__hidessid == "1" then %>
				checked="checked"
				<% end %> type="checkbox" />
				</td>
			</tr>
			<tr>
				<td>AP Isolation</td>
				<td>
				<input name="__noforwarding" value="1"
				<% if vif.__noforwarding == "1" then %>
				checked="checked"
				<% end %> type="checkbox" />
				</td>
			</tr>
			<tr>
				<td>WMM QoS</td>
				<td>
				<input name="__wmmcapable" value="1"
				<% if vif.__wmmcapable ~= "0" then %>
				checked="checked"
				<% end %> type="checkbox" />
				</td>
			</tr>
			<% if vifname == "ra0" or vifname == "rai0" then %>
			<tr>
				<td>Add <%=vifname%> to br-lan</td>
				<td>
				<input name="__lan" value="1"
				<% if mtkwifi.token_get(cfgs["EAPifname"], vifidx, 0) == "br-lan" then %>
				checked="checked"
				<% end %> type="checkbox" />
				</td>
			</tr>
			<% end %>
	<!--
			<tr>
				<td>TX Rate</td>
				<td>
				<input value="<%=vif.__txrate or 0%>" name="__txrate" id="__txrate" />
				</td>
			</tr>
	-->
			</tbody>
			<tfoot>
			<tr>
				<td></td>
				<td></td>
			</tr>
			</tfoot>
		</table>
		</fieldset>

		<div class="cbi-page-actions">
			<input class="cbi-button cbi-button-link" value="<%:Back%>" type="button" onclick="location.href='<%=luci.dispatcher.build_url("admin", "network", "wifi")%>'" />
			<input class="cbi-button cbi-button-positive" value="<%:Save%>" type="submit" />
			<input class="cbi-button cbi-button-apply" value="<%:Save & Apply%>" type="submit" onclick='save_apply()' />
			<input class="cbi-button cbi-button-reset" value="<%:Reset%>" type="reset" />
		</div>
	<% end %>
	</form>
</div>


<script src="/luci-static/resources/jquery/jquery-1.4.js"></script>
<script type="text/javascript">
function wifi_reload(url) {
	window.scrollTo(0, 0);
	document.getElementById('loading').style.display="";
	reload();
	XHR.get(url, null,
		function(x)
		{
			console.log(x);
			document.getElementById("loading").style.display="none";
			window.location.reload();
		}
	);
}

function reload() {
	setInterval(function() {
		if (navigator.onLine) {
			window.location.reload();
		}
	}, 20000);
}

function save_apply() {
	sessionStorage.setItem("save_apply", "true");
}

function AuthMode_onchange(to) {
	var enc_list = new Array()
	enc_list[0] = "OPEN";
	enc_list[1] = "WEP";
	enc_list[2] = "WPA2PSK";
	enc_list[3] = "WPA2";
	enc_list[4] = "IEEE8021X";
	enc_list[5] = "WPAPSKWPA2PSK";
	enc_list[6] = "WPA1WPA2";
	enc_list[7] = "WPA3PSK";
	enc_list[8] = "WPA2PSKWPA3PSK";
	enc_list[9] = "OWE";

	//replacing input string to WEP (for the case of OPEN, SHARED, WEPAUTO) so as to enable the control with id wep
	if ((to == "WEPAUTO") || (to == "SHARED") || (to == "OPEN")) {
		to = "WEP";
	}
	for (enc in enc_list) {
		var e = document.getElementById(enc_list[enc])
		if (enc_list[enc] == to) {
			if (e) e.style.display = "";
		} else {
			if (e) e.style.display = "none";
		}
	}
	
	if (to == "WPA2" || to == "IEEE8021X" || to == "WPA1WPA2") {
		document.getElementById("radius").style.display = "";
	} else {
		document.getElementById("radius").style.display = "none";
	}
	if (to == "WPA2" || to == "IEEE8021X" || to == "WPA1WPA2") {
		document.getElementById("radius").style.display = "";
	} else {
		document.getElementById("radius").style.display = "none";
	}
	
	if (to == "WPA2" || to == "WPA2PSK" || to == "WPA1WPA2") {
		document.getElementById("MFP").style.display = "";
	} else {
		document.getElementById("MFP").style.display = "none";
	}
	if (to == "WPA2PSKWPA3PSK") {
		document.getElementById("MFP2").style.display = "";
	} else {
		document.getElementById("MFP2").style.display = "none";
	}
	if (to == "WPA3PSK" || to == "OWE") {
		document.getElementById("MFP3").style.display = "";
	} else {
		document.getElementById("MFP3").style.display = "none";
	}
	if (to == "IEEE8021X" || to == "WPAPSKWPA2PSK") {
		document.getElementById("MFP4").style.display = "";
	} else {
		document.getElementById("MFP4").style.display = "none";
	}
	
	if (to == "WPA2" || to == "WPA2PSK" || to == "WPAPSKWPA2PSK" || to == "WPA1WPA2" || to == "WPA3PSK" || to == "WPA2PSKWPA3PSK") {
		document.getElementById("key_r").style.display = "";
	} else {
		document.getElementById("key_r").style.display = "none";
	}
	
	if (to == "WPA2" || to == "WPA2PSK" || to == "WPAPSKWPA2PSK" || to == "WPA1WPA2") {
		document.getElementById("wpacommon").style.display = "";
	} else {
		document.getElementById("wpacommon").style.display = "none";
	}	
	if (to == "WPA3PSK" || to == "WPA2PSKWPA3PSK" || to == "OWE") {
		document.getElementById("wpacommon3").style.display = "";
	} else {
		document.getElementById("wpacommon3").style.display = "none";
	}

	if (to == "WPA2PSK" || to == "WPA3PSK" || to == "WPAPSKWPA2PSK" || to == "WPA2PSKWPA3PSK") {
		document.getElementById("WPA2PSK").style.display = "";
	}
}

function rgi() {
	$(".ren").each(function() {
		$(this).text($(this).text().replace('mt7615.1', 'MT7622'));
		<% if mt1 == "mt7612" then %>
		$(this).text($(this).text().replace('mt7615.2', 'mt7612'));
		<% else %>
		$(this).text($(this).text().replace('mt7615.2', 'MT7915'));
		<% end %>
	});
}

window.onload = function() {
	AuthMode_onchange(document.getElementById("AuthMode").options[document.getElementById("AuthMode").selectedIndex].value);
	var reloading = sessionStorage.getItem("save_apply");
	if ($("#reload").length > 0) {
		if (reloading) {
			sessionStorage.removeItem("save_apply");
			wifi_reload("<%=luci.dispatcher.build_url("admin", "network", "wifi", "reload", devname)%>");
		} else {
			document.getElementById('reload').style.display="";
		}
	}
	<% if mt1 ~= "" then %>
	rgi();
	setTimeout(
		function(){
			document.getElementById("container").style.visibility = "visible";
		}, 100);
	<% end %>
}
</script>

<%+footer%>
